Limit  (cost=112.34..112.35 rows=3 width=16) (actual time=0.657..0.663 rows=3 loops=1)
  ->  Sort  (cost=112.34..112.44 rows=40 width=16) (actual time=0.656..0.656 rows=3 loops=1)
        Sort Key: (count(ROW(veic.id_veiculo, veic.placa, veic.cidade, veic.estado, veic.marca, veic.modelo, veic.cor)))
        Sort Method: quicksort  Memory: 25kB
        ->  HashAggregate  (cost=111.42..111.82 rows=40 width=16) (actual time=0.636..0.638 rows=4 loops=1)
              Group Key: veic.marca
              ->  Hash Join  (cost=107.58..111.22 rows=40 width=44) (actual time=0.615..0.621 rows=4 loops=1)
                    Hash Cond: (vm.fk_id_veiculo = veic.id_veiculo)
                    ->  HashAggregate  (cost=104.78..106.78 rows=200 width=4) (actual time=0.434..0.437 rows=4 loops=1)
                          Group Key: vm.fk_id_veiculo
                          ->  Hash Semi Join  (cost=50.85..101.96 rows=1130 width=4) (actual time=0.416..0.425 rows=4 loops=1)
                                Hash Cond: (vm.fk_id_moradia = mor.id_moradia)
                                ->  Seq Scan on veiculo_moradia vm  (cost=0.00..32.60 rows=2260 width=8) (actual time=0.023..0.027 rows=20 loops=1)
                                ->  Hash  (cost=50.48..50.48 rows=30 width=8) (actual time=0.356..0.356 rows=9 loops=1)
                                      Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                      ->  Hash Join  (cost=46.84..50.48 rows=30 width=8) (actual time=0.321..0.337 rows=9 loops=1)
                                            Hash Cond: (cond_mor.fk_id_moradia = mor.id_moradia)
                                            ->  HashAggregate  (cost=43.98..45.98 rows=200 width=4) (actual time=0.214..0.222 rows=19 loops=1)
                                                  Group Key: cond_mor.fk_id_moradia
                                                  ->  Hash Join  (cost=2.34..40.99 rows=1195 width=4) (actual time=0.177..0.199 rows=19 loops=1)
                                                        Hash Cond: (cond_mor.fk_id_condominio = cond.id_condominio)
                                                        ->  Seq Scan on condominio_moradia cond_mor  (cost=0.00..32.60 rows=2260 width=8) (actual time=0.022..0.028 rows=40 loops=1)
                                                        ->  Hash  (cost=1.88..1.88 rows=37 width=4) (actual time=0.131..0.131 rows=37 loops=1)
                                                              Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                              ->  Seq Scan on condominio cond  (cost=0.00..1.88 rows=37 width=4) (actual time=0.088..0.112 rows=37 loops=1)
                                                                    Filter: (tipo_condominio = 'e'::bpchar)
                                                                    Rows Removed by Filter: 33
                                            ->  Hash  (cost=2.13..2.13 rows=59 width=4) (actual time=0.086..0.086 rows=59 loops=1)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 11kB
                                                  ->  Seq Scan on moradia mor  (cost=0.00..2.13 rows=59 width=4) (actual time=0.027..0.057 rows=59 loops=1)
                                                        Filter: (tipo_moradia = 'a'::bpchar)
                                                        Rows Removed by Filter: 31
                    ->  Hash  (cost=1.80..1.80 rows=80 width=44) (actual time=0.156..0.156 rows=80 loops=1)
                          Buckets: 1024  Batches: 1  Memory Usage: 15kB
                          ->  Seq Scan on veiculo veic  (cost=0.00..1.80 rows=80 width=44) (actual time=0.048..0.081 rows=80 loops=1)
Planning time: 1.176 ms
Execution time: 1.689 ms