------------------ QUERY ORIGINAL ----------------------------------

SELECT v.marca, COUNT(v.*) FROM adm_condominio.Veiculo AS v
	INNER JOIN adm_condominio.Veiculo_Moradia AS vM ON vM.fk_id_veiculo = v.id_veiculo
	INNER JOIN adm_condominio.Moradia AS m ON m.id_moradia = vM.fk_id_moradia AND m.tipo_moradia = 'a'
	INNER JOIN adm_condominio.Condominio_Moradia AS cM ON cM.fk_id_moradia = m.id_moradia
	INNER JOIN adm_condominio.Condominio AS c ON c.id_condominio = cM.fk_id_condominio AND c.tipo_condominio = 'e'
	GROUP BY v.marca
	ORDER BY 2
	LIMIT 3;

Limit  (cost=328.45..328.46 rows=3 width=16) (actual time=0.255..0.258 rows=3 loops=1)
  ->  Sort  (cost=328.45..328.55 rows=41 width=16) (actual time=0.254..0.254 rows=3 loops=1)
        Sort Key: (count(v.*))
        Sort Method: quicksort  Memory: 25kB
        ->  HashAggregate  (cost=327.51..327.92 rows=41 width=16) (actual time=0.244..0.245 rows=4 loops=1)
              Group Key: v.marca
              ->  Hash Join  (cost=59.65..229.16 rows=19671 width=76) (actual time=0.231..0.237 rows=4 loops=1)
                    Hash Cond: (vm.fk_id_moradia = m.id_moradia)
                    ->  Hash Join  (cost=2.80..41.45 rows=2260 width=80) (actual time=0.111..0.116 rows=20 loops=1)
                          Hash Cond: (vm.fk_id_veiculo = v.id_veiculo)
                          ->  Seq Scan on veiculo_moradia vm  (cost=0.00..32.60 rows=2260 width=8) (actual time=0.020..0.020 rows=20 loops=1)
                          ->  Hash  (cost=1.80..1.80 rows=80 width=80) (actual time=0.074..0.074 rows=80 loops=1)
                                Buckets: 1024  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on veiculo v  (cost=0.00..1.80 rows=80 width=80) (actual time=0.020..0.050 rows=80 loops=1)
                    ->  Hash  (cost=47.06..47.06 rows=783 width=8) (actual time=0.108..0.108 rows=9 loops=1)
                          Buckets: 1024  Batches: 1  Memory Usage: 9kB
                          ->  Hash Join  (cost=5.20..47.06 rows=783 width=8) (actual time=0.094..0.104 rows=9 loops=1)
                                Hash Cond: (cm.fk_id_moradia = m.id_moradia)
                                ->  Hash Join  (cost=2.34..40.99 rows=1195 width=4) (actual time=0.051..0.060 rows=19 loops=1)
                                      Hash Cond: (cm.fk_id_condominio = c.id_condominio)
                                      ->  Seq Scan on condominio_moradia cm  (cost=0.00..32.60 rows=2260 width=8) (actual time=0.011..0.014 rows=40 loops=1)
                                      ->  Hash  (cost=1.88..1.88 rows=37 width=4) (actual time=0.025..0.025 rows=37 loops=1)
                                            Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                            ->  Seq Scan on condominio c  (cost=0.00..1.88 rows=37 width=4) (actual time=0.010..0.018 rows=37 loops=1)
                                                  Filter: (tipo_condominio = 'e'::bpchar)
                                                  Rows Removed by Filter: 33
                                ->  Hash  (cost=2.13..2.13 rows=59 width=4) (actual time=0.033..0.033 rows=59 loops=1)
                                      Buckets: 1024  Batches: 1  Memory Usage: 11kB
                                      ->  Seq Scan on moradia m  (cost=0.00..2.13 rows=59 width=4) (actual time=0.012..0.021 rows=59 loops=1)
                                            Filter: (tipo_moradia = 'a'::bpchar)
                                            Rows Removed by Filter: 31
Planning Time: 0.590 ms
Execution Time: 0.431 ms


----------------------------- QUERY REFORMULADA 1 -----------------------------------------

SELECT v.marca, COUNT(v.*) FROM adm_condominio.Veiculo AS v,
			adm_condominio.Veiculo_Moradia AS vM,
			adm_condominio.Moradia AS m,
			adm_condominio.Condominio_Moradia AS cM,
			adm_condominio.Condominio AS c

			WHERE vM.fk_id_veiculo = v.id_veiculo
			AND m.id_moradia = vM.fk_id_moradia
			AND m.tipo_moradia = 'a'
			AND cM.fk_id_moradia = m.id_moradia
			AND c.id_condominio = cM.fk_id_condominio
			AND c.tipo_condominio = 'e'
			GROUP BY v.marca
			ORDER BY 2
			LIMIT 3;

Limit  (cost=328.45..328.46 rows=3 width=16) (actual time=0.567..0.572 rows=3 loops=1)
  ->  Sort  (cost=328.45..328.55 rows=41 width=16) (actual time=0.566..0.567 rows=3 loops=1)
        Sort Key: (count(v.*))
        Sort Method: quicksort  Memory: 25kB
        ->  HashAggregate  (cost=327.51..327.92 rows=41 width=16) (actual time=0.550..0.553 rows=4 loops=1)
              Group Key: v.marca
              ->  Hash Join  (cost=59.65..229.16 rows=19671 width=76) (actual time=0.511..0.539 rows=4 loops=1)
                    Hash Cond: (vm.fk_id_moradia = m.id_moradia)
                    ->  Hash Join  (cost=2.80..41.45 rows=2260 width=80) (actual time=0.178..0.201 rows=20 loops=1)
                          Hash Cond: (vm.fk_id_veiculo = v.id_veiculo)
                          ->  Seq Scan on veiculo_moradia vm  (cost=0.00..32.60 rows=2260 width=8) (actual time=0.022..0.026 rows=20 loops=1)
                          ->  Hash  (cost=1.80..1.80 rows=80 width=80) (actual time=0.132..0.132 rows=80 loops=1)
                                Buckets: 1024  Batches: 1  Memory Usage: 17kB
                                ->  Seq Scan on veiculo v  (cost=0.00..1.80 rows=80 width=80) (actual time=0.020..0.087 rows=80 loops=1)
                    ->  Hash  (cost=47.06..47.06 rows=783 width=8) (actual time=0.310..0.310 rows=9 loops=1)
                          Buckets: 1024  Batches: 1  Memory Usage: 9kB
                          ->  Hash Join  (cost=5.20..47.06 rows=783 width=8) (actual time=0.260..0.301 rows=9 loops=1)
                                Hash Cond: (cm.fk_id_moradia = m.id_moradia)
                                ->  Hash Join  (cost=2.34..40.99 rows=1195 width=4) (actual time=0.127..0.160 rows=19 loops=1)
                                      Hash Cond: (cm.fk_id_condominio = c.id_condominio)
                                      ->  Seq Scan on condominio_moradia cm  (cost=0.00..32.60 rows=2260 width=8) (actual time=0.026..0.037 rows=40 loops=1)
                                      ->  Hash  (cost=1.88..1.88 rows=37 width=4) (actual time=0.081..0.081 rows=37 loops=1)
                                            Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                            ->  Seq Scan on condominio c  (cost=0.00..1.88 rows=37 width=4) (actual time=0.028..0.060 rows=37 loops=1)
                                                  Filter: (tipo_condominio = 'e'::bpchar)
                                                  Rows Removed by Filter: 33
                                ->  Hash  (cost=2.13..2.13 rows=59 width=4) (actual time=0.114..0.114 rows=59 loops=1)
                                      Buckets: 1024  Batches: 1  Memory Usage: 11kB
                                      ->  Seq Scan on moradia m  (cost=0.00..2.13 rows=59 width=4) (actual time=0.027..0.075 rows=59 loops=1)
                                            Filter: (tipo_moradia = 'a'::bpchar)
                                            Rows Removed by Filter: 31
Planning time: 0.930 ms
Execution time: 0.745 ms


----------------------------- QUERY REFORMULADA 2 --------------------------------

SELECT tab.marca, COUNT(tab.*) 
FROM 
	(SELECT * FROM adm_condominio.Veiculo AS veic 
	WHERE veic.id_veiculo IN 
	(SELECT vM.fk_id_veiculo FROM adm_condominio.Veiculo_Moradia AS vM 
	WHERE vM.fk_id_moradia IN 
	(SELECT mor.id_moradia FROM adm_condominio.Moradia AS mor 
	WHERE mor.tipo_moradia = 'a' AND mor.id_moradia IN
	(SELECT cond_mor.fk_id_moradia FROM adm_condominio.Condominio_Moradia AS cond_mor 
	WHERE cond_mor.fk_id_condominio IN 
	(SELECT cond.id_condominio FROM adm_condominio.Condominio AS cond 
	WHERE cond.tipo_condominio = 'e'))))) AS tab
	GROUP BY tab.marca
	ORDER BY 2
	LIMIT 3;

Limit  (cost=112.34..112.35 rows=3 width=16) (actual time=0.657..0.663 rows=3 loops=1)
  ->  Sort  (cost=112.34..112.44 rows=40 width=16) (actual time=0.656..0.656 rows=3 loops=1)
        Sort Key: (count(ROW(veic.id_veiculo, veic.placa, veic.cidade, veic.estado, veic.marca, veic.modelo, veic.cor)))
        Sort Method: quicksort  Memory: 25kB
        ->  HashAggregate  (cost=111.42..111.82 rows=40 width=16) (actual time=0.636..0.638 rows=4 loops=1)
              Group Key: veic.marca
              ->  Hash Join  (cost=107.58..111.22 rows=40 width=44) (actual time=0.615..0.621 rows=4 loops=1)
                    Hash Cond: (vm.fk_id_veiculo = veic.id_veiculo)
                    ->  HashAggregate  (cost=104.78..106.78 rows=200 width=4) (actual time=0.434..0.437 rows=4 loops=1)
                          Group Key: vm.fk_id_veiculo
                          ->  Hash Semi Join  (cost=50.85..101.96 rows=1130 width=4) (actual time=0.416..0.425 rows=4 loops=1)
                                Hash Cond: (vm.fk_id_moradia = mor.id_moradia)
                                ->  Seq Scan on veiculo_moradia vm  (cost=0.00..32.60 rows=2260 width=8) (actual time=0.023..0.027 rows=20 loops=1)
                                ->  Hash  (cost=50.48..50.48 rows=30 width=8) (actual time=0.356..0.356 rows=9 loops=1)
                                      Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                      ->  Hash Join  (cost=46.84..50.48 rows=30 width=8) (actual time=0.321..0.337 rows=9 loops=1)
                                            Hash Cond: (cond_mor.fk_id_moradia = mor.id_moradia)
                                            ->  HashAggregate  (cost=43.98..45.98 rows=200 width=4) (actual time=0.214..0.222 rows=19 loops=1)
                                                  Group Key: cond_mor.fk_id_moradia
                                                  ->  Hash Join  (cost=2.34..40.99 rows=1195 width=4) (actual time=0.177..0.199 rows=19 loops=1)
                                                        Hash Cond: (cond_mor.fk_id_condominio = cond.id_condominio)
                                                        ->  Seq Scan on condominio_moradia cond_mor  (cost=0.00..32.60 rows=2260 width=8) (actual time=0.022..0.028 rows=40 loops=1)
                                                        ->  Hash  (cost=1.88..1.88 rows=37 width=4) (actual time=0.131..0.131 rows=37 loops=1)
                                                              Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                              ->  Seq Scan on condominio cond  (cost=0.00..1.88 rows=37 width=4) (actual time=0.088..0.112 rows=37 loops=1)
                                                                    Filter: (tipo_condominio = 'e'::bpchar)
                                                                    Rows Removed by Filter: 33
                                            ->  Hash  (cost=2.13..2.13 rows=59 width=4) (actual time=0.086..0.086 rows=59 loops=1)
                                                  Buckets: 1024  Batches: 1  Memory Usage: 11kB
                                                  ->  Seq Scan on moradia mor  (cost=0.00..2.13 rows=59 width=4) (actual time=0.027..0.057 rows=59 loops=1)
                                                        Filter: (tipo_moradia = 'a'::bpchar)
                                                        Rows Removed by Filter: 31
                    ->  Hash  (cost=1.80..1.80 rows=80 width=44) (actual time=0.156..0.156 rows=80 loops=1)
                          Buckets: 1024  Batches: 1  Memory Usage: 15kB
                          ->  Seq Scan on veiculo veic  (cost=0.00..1.80 rows=80 width=44) (actual time=0.048..0.081 rows=80 loops=1)
Planning time: 1.176 ms
Execution time: 1.689 ms